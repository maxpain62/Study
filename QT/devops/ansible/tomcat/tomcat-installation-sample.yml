---
- name: install and configure java
  hosts: all
  become: yes
  tasks:
    - name: install java
      ansible.builtin.package:
        name: "{{ package }}"
        state: present
    - name: Create "{{ group_name }}" group
      ansible.builtin.group:
        name: "{{ group_name }}"
        state: present
    - name: Create "{{ user_name }}" user
      ansible.builtin.user:
        name: "{{ user_name }}"
        group: tomcat
        home: "{{ home_dir }}"
        shell: "{{ user_shell }}"
    - name: download and unzip
      ansible.builtin.unarchive:
        remote_src: yes
        src: "{{ source_url }}"
        dest: "{{ download_destination }}"
    - name: create synlinm 
      ansible.builtin.file:
        src: "{{ link_source }}"
        dest: "{{ link_destination }}"
        state: link
    - name: change ownership of tomcat
      ansible.builtin.file:
        path: "{{ link_destination }}"
        recurse: yes
        state: directory
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: find and display
      ansible.builtin.find:
        paths: /opt/tomcat/latest/bin/
        patterns: "*.sh"
      register: file_list
    - name: change permission
      ansible.builtin.file:
        path: "{{ item.path }}"
        mode: u+x
      with_items:
        - "{{ file_list.files }}"
    - name: Create a systemd Unit File
      ansible.builtin.copy:
        src: "{{ service_file }}"
        dest: /etc/systemd/system/tomcat.service
    - name: Configure Tomcat web mgmt user
      ansible.builtin.copy:
        src: tomcat-users
        dest: /opt/tomcat/latest/conf/tomcat-users.xml
    - name: configure manager/META-INF/context.xml and host-manager/META-INF/context.xml
      ansible.builtin.copy:
        src: context
        dest: "{{ item }}"
      loop: "{{ context_destination }}"
    - name: start and enable tomcat
      ansible.builtin.systemd:
        name: tomcat.service
        state: started
        daemon_reload: yes
        enabled: yes
