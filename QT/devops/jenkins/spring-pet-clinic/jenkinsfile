pipeline {
    agent 'any'
    stages {
        stage ('vcs') {
            steps {
                git branch: 'main', url: 'https://github.com/gauravlab01-outlook/spring-petclinic.git'
            }
        }
        stage ('artifactoty configuration') {
            steps {
                rtServer (
                    id: "ARTIFACTORY_SERVER",
                    url: 'https://gauravlab.jfrog.io/artifactory/',
                    credentialsId: 'JFROG_CRED'
                )

                rtMavenDeployer (
                    id: "MAVEN_DEPLOYER",
                    serverId: "ARTIFACTORY_SERVER",
                    releaseRepo: 'libs-release',
                    snapshotRepo: 'libs-snapshot'
                )

                rtMavenResolver (
                    id: "MAVEN_RESOLVER",
                    serverId: "ARTIFACTORY_SERVER",
                    releaseRepo: 'libs-release',
                    snapshotRepo: 'libs-snapshot'
                )
            }
        }
        stage ('build') {
            steps {
                rtMavenRun (
                    tool: 'MAVEN_DEFAULT',
                    pom: 'pom.xml',
                    goals: 'clean install',
                    deployerId: "MAVEN_DEPLOYER"

                )
            rtPublishBuildInfo (
                    serverId: "ARTIFACTORY_SERVER"
                )
            } 
        }
        stage ('sonar analysis') {
            steps {
                withSonarQubeEnv ('SONAR_CLOUD') {
                    sh 'mvn clean package sonar:sonar -Dsonar.organization=spc-organization -Dsonar.projectKey=spc-organization_spc-project'
                }
            }
        }
    }
}
