---
Parameters:
  vpccidr:
    Description: "cidr parameter for vpc"
    Type: String
    Default: 10.0.0.0/16
  subnetcidr:
    Description: "subnet cidr"
    Type: CommaDelimitedList
    Default: "10.0.0.0/24,10.0.1.0/24,10.0.2.0/24,10.0.3.0/24,10.0.4.0/24,10.0.5.0/24"
  zone1:
    Description: zone for web1,app1,db1
    Type: AWS::EC2::AvailabilityZone::Name
  zone2:
    Description: zone for web2,app2,db2
    Type: AWS::EC2::AvailabilityZone::Name
Resources:
  cfvpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock:
        Ref: vpccidr
      Tags:
        - Key: Name
          Value: cfvpc
  web1:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: 
        Fn::Select: [ 0, Ref: subnetcidr ]
      AvailabilityZone: 
        Ref: zone1
      VpcId:
        Ref: cfvpc
      Tags:
        - Key: Name
          Value: web1
  web2:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: 
        Fn::Select: [ 1, Ref: subnetcidr ]
      AvailabilityZone: 
        Ref: zone2
      VpcId:
        Ref: cfvpc
      Tags:
        - Key: Name
          Value: web2
  app1:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: 
        Fn::Select: [ 2, Ref: subnetcidr ]
      AvailabilityZone: 
        Ref: zone1
      VpcId:
        Ref: cfvpc
      Tags:
        - Key: Name
          Value: app1
  app2:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: 
        Fn::Select: [ 3, Ref: subnetcidr ]
      AvailabilityZone: 
        Ref: zone2
      VpcId:
        Ref: cfvpc
      Tags:
        - Key: Name
          Value: app2
  db1:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: 
        Fn::Select: [ 4, Ref: subnetcidr ]
      AvailabilityZone: 
        Ref: zone1
      VpcId:
        Ref: cfvpc
      Tags:
        - Key: Name
          Value: db1
  db2:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: 
        Fn::Select: [ 5, Ref: subnetcidr ]
      AvailabilityZone: 
        Ref: zone2
      VpcId:
        Ref: cfvpc
      Tags:
        - Key: Name
          Value: db2
  websg:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "web sg created with cf"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: -1 
          ToPort: -1
          CidrIp: 0.0.0.0/0
      VpcId:
        Ref: cfvpc
      Tags:
      - Key: Name
        Value: websg      
  appsg:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "app sg created with cf"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0 
      SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: -1 
          ToPort: -1
          CidrIp: 0.0.0.0/0
      VpcId:
        Ref: cfvpc
      Tags:
      - Key: Name
        Value: appsg
  dbsg:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "db sg created with cf"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 
            Ref: vpccidr
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 
            Ref: vpccidr
      SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: -1 
          ToPort: -1
          CidrIp: 0.0.0.0/0
      VpcId:
        Ref: cfvpc
      Tags:
      - Key: Name
        Value: dbsg